"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[888],{396:e=>{e.exports=JSON.parse('{"permalink":"/blog/scope-in-rails","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-06-13-scope-in-rails.md","source":"@site/blog/2023-06-13-scope-in-rails.md","title":"Scope in rails.","description":"Rails follow the DRY principle of software development and that is \'Don\'t Repeat Yourself\'.","date":"2023-06-13T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."}],"readingTime":1.53,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyeshpatil27/","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"scope-in-rails","title":"Scope in rails.","authors":"pradnyesh","tags":["rails"]},"unlisted":false,"prevItem":{"title":"How to use a Singleton method in the rails.","permalink":"/blog/singleton-method-in-the-ruby"},"nextItem":{"title":"Relational database.","permalink":"/blog/relational-database"}}')},7450:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var a=n(396),t=n(4848),r=n(8453);const i={slug:"scope-in-rails",title:"Scope in rails.",authors:"pradnyesh",tags:["rails"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"1. Scope with parameter.",id:"1-scope-with-parameter",level:2},{value:"2. Scopes Are Chainable",id:"2-scopes-are-chainable",level:2},{value:"3. How exactly scope works in rails",id:"3-how-exactly-scope-works-in-rails",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Rails follow the DRY principle of software development and that is 'Don't Repeat Yourself'.\nScopes are great to keep our code DRY and well organized. It's just a set of pre-defined SQL queries that we can use to write complex queries."}),"\n",(0,t.jsxs)(s.p,{children:["Suppose we want to fetch users who have status ",(0,t.jsx)(s.code,{children:"active"}),". So, we can simply write the following query"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'\ndef index\n  @active_users = User.where(status: "active")\nend\n'})}),"\n",(0,t.jsx)(s.p,{children:"But we may need to re-use this code multiple times in our project. So instead of writing the same code, again and again, we can define a scope for it."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'class user < ActiveRecord::Base\n  scope :active, -> { where(status: "active") }\nend\n'})}),"\n",(0,t.jsx)(s.p,{children:"Now, we can simply use an active scope to fetch all active users as following:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"def index\n  @active_users = User.active\nend\n"})}),"\n",(0,t.jsx)(s.h2,{id:"1-scope-with-parameter",children:"1. Scope with parameter."}),"\n",(0,t.jsx)(s.p,{children:"we can give parameters to scope."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class Fruit < ActiveRecord::Base\n  scope :color, -> (color_name){ where(color: color_name) }\nend\n"})}),"\n",(0,t.jsx)(s.p,{children:"now in our Fruit controller we can use"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'def Index\n  @red_fruits = Fruit.color("red")\n  @yellow_fruits = Fruit.color("yellow")\nend\n'})}),"\n",(0,t.jsx)(s.h2,{id:"2-scopes-are-chainable",children:"2. Scopes Are Chainable"}),"\n",(0,t.jsx)(s.p,{children:"This is really interesting and it makes scope even more useful."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class User < ApplicationRecord\n  scope :active, -> { where(status: \"active\") }\n  scope :recent, -> { where('created_at < ?', 1.week.ago }\nend\n"})}),"\n",(0,t.jsx)(s.p,{children:"we can use it in the controller as following;"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"def index\n  @users = User.active.recent\nend\n"})}),"\n",(0,t.jsx)(s.h2,{id:"3-how-exactly-scope-works-in-rails",children:"3. How exactly scope works in rails"}),"\n",(0,t.jsx)(s.p,{children:"look at the active scope once again"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'class user < ActiveRecord::Base\n  scope :active, -> { where(status: "active") }\nend\n'})}),"\n",(0,t.jsx)(s.p,{children:"we can achieve the same result using the following class method as given. Basically, instead of writing class method scope is syntactical sugar for writing queries."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'\ndef self.active\n  User.where(status: "active")\nend\n'})}),"\n",(0,t.jsxs)(s.p,{children:["I would love to hear some of the interesting topics related to rails which I can explore and write a blog about it on ",(0,t.jsx)(s.a,{href:"https://x.com/Shyampa09340219",children:"Twitter"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"Cheers!"})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var a=n(6540);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);