"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/how-to-create-rake-task","metadata":{"permalink":"/blog/how-to-create-rake-task","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-10-4-how-to-create-rake-task.md","source":"@site/blog/2023-10-4-how-to-create-rake-task.md","title":"How to create and use Rake task in ruby and use it in the Rails?","description":"Sometimes, We need to have a task that can be executed at regular basic at some time. In ruby, we have a rake task to define and execute this task at any time. We can use rake tasks in Rails for various purposes.","date":"2023-10-04T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."},{"inline":false,"label":"Ruby","permalink":"/blog/tags/ruby","description":"A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write."}],"readingTime":2.19,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"/how-to-create-rake-task","title":"How to create and use Rake task in ruby and use it in the Rails?","authors":"pradnyesh","tags":["rails","ruby"]},"unlisted":false,"nextItem":{"title":"Postgres users and their permission issue.","permalink":"/blog/postgres-permission-denied"}},"content":"Sometimes, We need to have a task that can be executed at regular basic at some time. In ruby, we have a rake task to define and execute this task at any time. We can use rake tasks in Rails for various purposes.\\n\\n\x3c!--truncate--\x3e\\n\\nRake is inspired by Linux [make utility](<https://en.wikipedia.org/wiki/Make_(software)>). Its name comes from the `Ruby Make`. Rake is a task management utility that reads and executes the tasks defined in the ruby language in the \'Rakefile`. It was written by the late [Jim Weirich](https://en.wikipedia.org/wiki/Jim_Weirich).\\n\\n# How to create a Rake task.\\n\\nCreate a file with the name \'Rakefile\' and write the following content in it.\\n` $ touch Rakefile`\\n\\n```\\ndesc \'print hello world\'\\ntask :hello_world do\\n  puts \'Hello world from Rubyist\'\\nend\\n```\\n\\nHere `desc` command defines the description of the task and `task` command defines the actual task that needs to be executed. Here we are defining a simple task which is printing \\"Hello world from Rubyist.\\".\\n\\nIf you are in the directory containing the Rakefile then you can execute the following commands:\\n\\n```\\n$ rake --task              This command will show all the tasks defined in the Rakefile along with its description.\\n=> rake hello_world        # Print hello world\\n```\\n\\nNow we can execute the task using the following command\\n\\n```\\n$ rake hello_world\\n=> Hello world from Rubyist\\n```\\n\\nWe can also use namespace while defining the Rake task add the following code to Rakefile:\\n\\n```\\ndesc \'Display files from the current directory\'\\nnamespace :admin do\\n  task :display_files do\\n    system(\'ls\')\\n  end\\nend\\n```\\n\\nLet\'s see all tasks once again:\\n\\n```\\n$ rake --task\\n=> rake admin:display_files  # Display files from the current directory\\n   rake hello_world          # print hello world\\n```\\n\\nWe can execute this task as follows:\\n\\n```\\n$ rake admin:hello_world\\n(It should display files from your current directory)\\n```\\n\\nNamespacing to rake task is always good when the number of tasks is more and also it separates the context of the task.\\n\\nIn the Rails project we can see many rake tasks as following:\\n\\n- rails db:migrate\\n- rails routes\\n- rake tmp:clear\\n- rake tmp:create\\n\\nWe can find out many more tasks by executing `rake --task` command in the Rails application root directory.\\n\\n## How to define custom rake tasks in Rails?\\n\\nWe can create file with `.rake` extension in `/lib/tasks/` folder.\\n\\n```\\n# lib/tasks/clear_logs.rake\\n\\nnamespace :Logs do\\n  desc \'clear the log files\'\\n  task clear: :environment do\\n    Dir[\\"log/*.log\\"].each do |file|\\n       File.unlink(file)\\n    end\\n  end\\nend\\n```\\n\\nAbove task is deleting all files from `log directory`.\\n\\nNow we can simply execute this task as following:\\n\\n```\\n$ rake Logs:clear\\n```\\n\\nI hope you loved it.\\nPlease feel free to contact me on [twitter](https://x.com/Shyampa09340219)."},{"id":"postgres-permission-denied","metadata":{"permalink":"/blog/postgres-permission-denied","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-04-09-permission-denied-for-relation-error-in-postgres.md","source":"@site/blog/2023-04-09-permission-denied-for-relation-error-in-postgres.md","title":"Postgres users and their permission issue.","description":"Have you ever faced the following issue while fetching records from Postgres in the rails?","date":"2023-04-09T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."},{"inline":true,"label":"postgres","permalink":"/blog/tags/postgres"}],"readingTime":1.61,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"postgres-permission-denied","title":"Postgres users and their permission issue.","authors":"pradnyesh","tags":["rails","postgres"]},"unlisted":false,"prevItem":{"title":"How to create and use Rake task in ruby and use it in the Rails?","permalink":"/blog/how-to-create-rake-task"},"nextItem":{"title":"Do you know how helpful the const_get method is?","permalink":"/blog/const-get-method-in-ruby"}},"content":"Have you ever faced the following issue while fetching records from Postgres in the rails?\\n\\n**`ActiveRecord::StatementInvalid: PG::InsufficientPrivilege: ERROR:  permission denied for relation`**\\n\\n\x3c!--truncate--\x3e\\n\\nI had following configuration in my database.yml file\\n\\n```\\ndevelopment:\\n  <<: *default\\n  database: dev_db_name\\n\\nstaging:\\n  <<: *default\\n  database: staging_db_name\\n  username: staging_db_username\\n  password: password\\n\\ntest:\\n  <<: *default\\n  database: test_db_name\\n  username: test_db_username\\n  password: password\\n```\\n\\nSo while fetching Postgres record from rails console I was getting above mentioned error\\n\\nAnother issue was the rails were not providing the username for which permission error was occurring and I was not sure about the username used while fetching the Postgres record.\\n\\nTo check which user is getting permission error we can check Postgres log file:\\nIf you are using ubuntu the please open following file:\\n\\n`/var/log/postgresql/postgresql-10-main.log` (log file name can be different as per your Postgres version)\\n\\nIn the log file you will get line similar to the following:\\n\\n```\\n2020-04-09 17:24:01.874 IST [25904] root@dev_db_name ERROR:  permission denied for relation\\n```\\n\\nHere we can get the username `root@dev_db_name` so `root` user is getting permission denied for the table.\\n\\nTo solve this issue use the following steps:\\n\\n- Open your Postgres console with the following command:\\n\\n  `sudo su - postgres` followed by `psql`\\n\\n- Now use `\\\\du` command to check users and their permissions.\\n\\n```\\npostgres=# \\\\du\\n                                      List of roles\\n   Role name    |                         Attributes                         | Member of\\n----------------+------------------------------------------------------------+-----------\\n postgres       | Superuser, Create role, Create DB, Replication, Bypass RLS | {}\\n root           |                                                            | {}\\n pradnyesh        | Superuser, Create DB, Bypass RLS                           | {}\\n```\\n\\nHere we can see root user don\'t have any permission\\n\\nNow grant the following permissions to the `root` user.\\n\\n```\\nGRANT ALL PRIVILEGES ON DATABASE dev_db_name to root;\\npostgres=# ALTER USER root WITH SUPERUSER CREATEDB BYPASSRLS;\\n```\\n\\nyou can read more about the Privileges in PostgreSQL [Here](https://www.digitalocean.com/docs/databases/postgresql/how-to/modify-user-privileges/).\\n\\nI hope it will solve your problem.\\nIf you still have a problem please feel free to contact me on [patilpradnyesh1312@gmail.com](mailto:patilpradnyesh1312@gmail.com)."},{"id":"const-get-method-in-ruby","metadata":{"permalink":"/blog/const-get-method-in-ruby","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-02-11-const-get-method-in-ruby.md","source":"@site/blog/2023-02-11-const-get-method-in-ruby.md","title":"Do you know how helpful the const_get method is?","description":"First, we will understand how the const_get method works then I will explain how we can use it in different ways and what are the use cases.","date":"2023-02-11T00:00:00.000Z","tags":[{"inline":false,"label":"Ruby","permalink":"/blog/tags/ruby","description":"A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write."}],"readingTime":1.73,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"const-get-method-in-ruby","title":"Do you know how helpful the const_get method is?","authors":"pradnyesh","tags":["ruby"]},"unlisted":false,"prevItem":{"title":"Postgres users and their permission issue.","permalink":"/blog/postgres-permission-denied"},"nextItem":{"title":"Difference between puts, p, and print in ruby.","permalink":"/blog/compare-puts-p-print-in-ruby"}},"content":"First, we will understand how the const_get method works then I will explain how we can use it in different ways and what are the use cases.\\n\\n\x3c!--truncate--\x3e\\n\\n```ruby\\nmodule Vehicle\\n  class Car\\n    WHEELS = 4\\n  end\\nend\\n\\nputs Object.const_get \'Vehicle::Car::WHEELS\'   # => 4\\n```\\n\\nHere, we can see that we have passed the string \'Vehicle::Car::WHEELS\' parameter to method const_get and it has given the outcome \'4\' which is the actual value of constant wheels.\\n\\nWe can also use some variable to store this string and get the constant\'s value bypassing this variable as a parameter to the const_get method.\\n\\nWe can also lookup the ancestor\'s constant using const_get method if the inherit flag is set as true.\\n\\n`Note:` ancestors of some module means a list of modules included or prepend in that module.\\n\\n```ruby\\nmodule Vehicle\\n  class Car\\n    WHEELS = 4\\n  end\\n\\n  class TeslaS < Car\\n  end\\nend\\n\\nwheel_const = \'Vehicle::TeslaS::WHEELS\'\\n\\n# Here true is inherit flag which can be true or false\\nputs Object.const_get(wheel_const, true)  # => 4\\n```\\n\\nHere we have given the inherit flag as true it means lookup the base class and the module Vehicle\'s ancestors as well. If we would have included/prepend some modules in our Vehicle module then the const_get method also would have lookup into those modules.\\n\\nNow, let\'s try to change that flag into false.\\n\\n```ruby\\n\\nmodule Vehicle\\n  class Car\\n    WHEELS = 4\\n  end\\n\\n  class TeslaS < Car\\n  end\\nend\\n\\nwheel_const = \'Vehicle::TeslaS::WHEELS\'\\nputs Object.const_get(wheel_const, false)\\n\\n#  Output:\\n#  Traceback (most recent call last):\\n#\\t  1: from random.rb:11:in `<main>\'\\n#  random.rb:11:in `const_get\': uninitialized constant Vehicle::TeslaS::WHEELS (NameError)\\n```\\n\\nNow, we are getting an error uninitialized constant `Vehicle::TeslaS::WHEELS` because now we have set inherit flag as a false so const_get method will not lookup base class or modules ancestors for `WHEEL` constant. It will throw an error because the `WHEEL` constant is not defined in the TeslaS class.\\n\\n`Note:` If we do not mention the inherit flag then it is by default true.\\n\\nI hope you loved it.\\nPlease feel free to contact me on [twitter](https://x.com/Shyampa09340219)."},{"id":"compare-puts-p-print-in-ruby","metadata":{"permalink":"/blog/compare-puts-p-print-in-ruby","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-10-13-difference-between-puts-print-and-p-in-ruby.md","source":"@site/blog/2022-10-13-difference-between-puts-print-and-p-in-ruby.md","title":"Difference between puts, p, and print in ruby.","description":"Ruby is developer friendly language and it provides many ways to perform same task. For example for printing the output on the console we can use puts, prints and p. But multiple ways to do same task means more confusion for selecting correct way for our use case. In this blog we will discuss about difference between puts, print and p so that we can select correct method as per our use case.","date":"2022-10-13T00:00:00.000Z","tags":[{"inline":false,"label":"Ruby","permalink":"/blog/tags/ruby","description":"A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write."}],"readingTime":2.25,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"compare-puts-p-print-in-ruby","title":"Difference between puts, p, and print in ruby.","authors":"pradnyesh","tags":["ruby"]},"unlisted":false,"prevItem":{"title":"Do you know how helpful the const_get method is?","permalink":"/blog/const-get-method-in-ruby"},"nextItem":{"title":"Extend, Merge methods in the Javascript.","permalink":"/blog/how-to-merge-objects-in-javascript"}},"content":"Ruby is developer friendly language and it provides many ways to perform same task. For example for printing the output on the console we can use puts, prints and p. But multiple ways to do same task means more confusion for selecting correct way for our use case. In this blog we will discuss about difference between puts, print and p so that we can select correct method as per our use case.\\n\\n\x3c!--truncate--\x3e\\n\\n#### Let\'s start with `hello world` using all of this.\\n\\n#### 1. Using `puts`.\\n\\n```ruby\\n> puts \'hello world\'\\nhello world\\n => nil\\n```\\n\\n#### 2. Using `p`.\\n\\n```ruby\\n> p \'hello world\'\\n\\"hello world\\"\\n => \\"hello world\\"\\n```\\n\\n#### 3. Using `print`\\n\\n```ruby\\nprint \'hello world\'\\nhello world => nil\\n```\\n\\nYou must have observed there is some difference in every output.\\n\\n#### Few observations:\\n\\n1. puts and print has return `nil` while p has return the input we have passed to it.\\n2. p has shown output in string format.\\n3. return value of puts and p has printed on next line and for print return value is on same line.\\n\\n### Let\'s take one more example for better understanding:\\n\\nNow we create one file with extension .rb and paste below given code in that file.\\n\\n1.Example of puts:\\n\\n```ruby\\nA = \'I\'\\nB = \'Love\'\\nC = \'Ruby\'\\n\\nputs A\\nputs B\\nputs C\\n```\\n\\nNow we can run this file using `ruby filename.rb` in the terminal and before running this command confirm that you are in the same directory where you have created ruby file.\\n\\noutput of above code will be as following\\n\\nOutput of puts:\\n\\n```ruby\\nI\\nLove\\nRuby\\n```\\n\\nNow we will execute same code for print and p.\\n\\n2.Using print\\n\\n```ruby\\nA = \'I\'\\nB = \'Love\'\\nC = \'Ruby\'\\n\\nprint A\\nprint B\\nprint C\\n```\\n\\nOutput of print:\\n\\n```\\nILoveRuby\\n```\\n\\n3.Using p.\\n\\n```ruby\\nA = \'I\'\\nB = \'Love\'\\nC = \'Ruby\'\\n\\np A\\np B\\np C\\n```\\n\\nOutput of p:\\n\\n```\\n\\"I\\"\\n\\"Love\\"\\n\\"Ruby\\"\\n```\\n\\nNow you must have more clarity about all of this methods.\\n\\nLet\'s conclude the blog:\\n\\n1. puts: puts add newline character at the end of the output. that is why we got return value `nil` on the next line.\\n\\n2. print: print does not add newline character at the end of output because of that the return value of print that is `nil` is printed on the same line where output is printed.\\n\\n3. p: p does not change data type of the input provided to it. if we are passing string type of input it also prints the string type of output. Most importantly, unlike to puts and print p does not return nil value. It returns the same value which has passed to it.\\n\\nPlease feel free to contact me on [twitter](https://x.com/Shyampa09340219)."},{"id":"how-to-merge-objects-in-javascript","metadata":{"permalink":"/blog/how-to-merge-objects-in-javascript","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-24-how-to-merge-objects-in-javascript.md","source":"@site/blog/2022-08-24-how-to-merge-objects-in-javascript.md","title":"Extend, Merge methods in the Javascript.","description":"Yesterday, I was working on an issue in which database value for particular object attribute was correct but on UI it was showing the wrong value. I dig into the front-end Javascript code and I found that bug occurred while merging the two objects in Javascript. first, we will discuss how to merge two objects then I will explain what we should care about while merging two objects.","date":"2022-08-24T00:00:00.000Z","tags":[{"inline":true,"label":"javascipt","permalink":"/blog/tags/javascipt"}],"readingTime":1.62,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"how-to-merge-objects-in-javascript","title":"Extend, Merge methods in the Javascript.","authors":"pradnyesh","tags":["javascipt"]},"unlisted":false,"prevItem":{"title":"Difference between puts, p, and print in ruby.","permalink":"/blog/compare-puts-p-print-in-ruby"},"nextItem":{"title":"How to use a Singleton method in the rails.","permalink":"/blog/singleton-method-in-the-ruby"}},"content":"Yesterday, I was working on an issue in which database value for particular object attribute was correct but on UI it was showing the wrong value. I dig into the front-end Javascript code and I found that bug occurred while merging the two objects in Javascript. first, we will discuss how to merge two objects then I will explain what we should care about while merging two objects.\\n\\n\x3c!--truncate--\x3e\\n\\n## How to merge objects?\\n\\n### 1. Merge two objects having distinct attributes names.\\n\\ndeclare two objects as the following:\\n\\n```javascript\\nvar student = {\\n  student_name: \\"Rahul\\",\\n  age: 22,\\n  standard: \\"6th\\",\\n};\\n\\nvar school = {\\n  school_name: \\"SBK high school\\",\\n  location: \\"Pune\\",\\n};\\n```\\n\\nNow, we will use `extend` method to merge these two objects.\\n\\n```javascript\\n$.extend(student, school);\\n\\n> {student_name: \\"Rahul\\", age: 22, standard: \\"6th\\", school_name: \\"SBK high school\\", location: \\"Pune\\"}\\n```\\n\\nWe can also use the `merge` method to merge these objects\\n\\n```javascript\\n$.merge(student, school);\\n\\n> { student_name: \\"Rahul\\", age: 22, standard: \\"6th\\", length: undefined}\\n```\\n\\n### 2. Merge two objects having some common attributes names.\\n\\nWe don\'t have to care where there are distinct attributes in the objects. But when there are some common attribute names then those attributes value gets an override.\\n\\ndeclare two objects having the same attribute names like the following:\\n\\n```javascript\\nvar student = {\\n  name: \\"Rahul\\",\\n  age: 22,\\n  standard: \\"6th\\",\\n};\\n\\nvar school = {\\n  name: \\"SBK high school\\",\\n  location: \\"Pune\\",\\n};\\n```\\n\\nNow, we will use `extend` method to merge these two objects.\\n\\n```javascript\\n$.extend(student, school);\\n\\n> {name: \\"SBK high school\\", age: 22, standard: \\"6th\\", location: \\"Pune\\"}\\n```\\n\\nWe can also use the `merge` method to merge these objects\\n\\n```javascript\\n$.merge(student, school);\\n\\n> {name: \\"Rahul\\", age: 22, standard: \\"6th\\", length: undefined}\\n```\\n\\nNow we have understood how to merge two objects in Javascript and the difference between merge and extend method in Javascript. We should be careful while merging two objects having a common attribute name. Common attribute names can cause unexpected result in the output.\\n\\nPlease feel free to contact me on [twitter](https://x.com/Shyampa09340219)."},{"id":"singleton-method-in-the-ruby","metadata":{"permalink":"/blog/singleton-method-in-the-ruby","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-10-singleton-method-in-the-ruby.md","source":"@site/blog/2022-08-10-singleton-method-in-the-ruby.md","title":"How to use a Singleton method in the rails.","description":"Today I have been going through Ruby Conference videos and Singleton method and metaclass in ruby was one of the talk discussed there So, I thought to write a blog about it.","date":"2022-08-10T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."}],"readingTime":1.68,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"singleton-method-in-the-ruby","title":"How to use a Singleton method in the rails.","authors":"pradnyesh","tags":["rails"]},"unlisted":false,"prevItem":{"title":"Extend, Merge methods in the Javascript.","permalink":"/blog/how-to-merge-objects-in-javascript"},"nextItem":{"title":"Scope in rails.","permalink":"/blog/scope-in-rails"}},"content":"Today I have been going through Ruby Conference videos and Singleton method and metaclass in ruby was one of the talk discussed there So, I thought to write a blog about it.\\n\\n\x3c!--truncate--\x3e\\n\\nIn ruby, we create the class and class has many methods written into it. When we create an object of the class we can access those methods using that object. So, the question raise in my mind was as follows.\\n\\n### 1. Who holds these methods? does class hold these methods or each object of the class holds this methods?\\n\\nLet us find it out.\\n\\n```ruby\\nclass User\\n  def role\\n    puts \\"Admin\\"\\n  end\\nend\\n\\nuser = User.new\\nuser.role         // Admin\\n\\nclass User\\n  def role\\n    puts \\"sales\\"\\n  end\\nend\\n\\nuser.role         // sales\\n```\\n\\nAs we can see we have overridden the `User` class that is why second `user.role` prints `sales`. It means all class methods are implemented in the class and also it is store in the class definitions.\\n\\nNow consider the situation where we want to create method only for a single object of the class not for all objects of the class. We can do it in the ruby using singleton methods for the class object.\\n\\n## 2. Singleton methods\\n\\nSingleton methods are the methods which are only available for a single particular object and not for all objects of the class.\\n\\nCheck the following snippet\\n\\n```ruby\\nclass User\\n  def role\\n    puts \\"Admin\\"\\n  end\\nend\\n\\nfirst_user = User.new\\nfirst_user.role              // Admin\\n\\n// Add singleton method department for `first_user` object.\\ndef first_user.department\\n  puts \'Admin department\'\\nend\\nfirst_user.department        // Admin department\\n\\nsecond_user = User.new\\nsecond_user.role             // Admin\\nsecond_user.department       // NoMethodError (undefined method `department\' for #<User:0x000055a8b44b45d0>)\\n```\\n\\nWe can observe that department method is not available for object `second_user` because the department is singleton method for object `first_user` so it is stored on the metaclass of an object and they are independent of the parent class of the object.\\n\\nSo, Object in ruby only stores the state. Its behavior comes from the class definition. The metaclass is almost similar to a class but it can\'t be instantiated."},{"id":"scope-in-rails","metadata":{"permalink":"/blog/scope-in-rails","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-06-13-scope-in-rails.md","source":"@site/blog/2022-06-13-scope-in-rails.md","title":"Scope in rails.","description":"Rails follow the DRY principle of software development and that is \'Don\'t Repeat Yourself\'.","date":"2022-06-13T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."}],"readingTime":1.53,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"scope-in-rails","title":"Scope in rails.","authors":"pradnyesh","tags":["rails"]},"unlisted":false,"prevItem":{"title":"How to use a Singleton method in the rails.","permalink":"/blog/singleton-method-in-the-ruby"},"nextItem":{"title":"Relational database.","permalink":"/blog/relational-database"}},"content":"Rails follow the DRY principle of software development and that is \'Don\'t Repeat Yourself\'.\\nScopes are great to keep our code DRY and well organized. It\'s just a set of pre-defined SQL queries that we can use to write complex queries.\\n\\n\x3c!--truncate--\x3e\\n\\nSuppose we want to fetch users who have status `active`. So, we can simply write the following query\\n\\n```ruby\\n\\ndef index\\n  @active_users = User.where(status: \\"active\\")\\nend\\n```\\n\\nBut we may need to re-use this code multiple times in our project. So instead of writing the same code, again and again, we can define a scope for it.\\n\\n```ruby\\nclass user < ActiveRecord::Base\\n  scope :active, -> { where(status: \\"active\\") }\\nend\\n```\\n\\nNow, we can simply use an active scope to fetch all active users as following:\\n\\n```ruby\\ndef index\\n  @active_users = User.active\\nend\\n```\\n\\n## 1. Scope with parameter.\\n\\nwe can give parameters to scope.\\n\\n```ruby\\nclass Fruit < ActiveRecord::Base\\n  scope :color, -> (color_name){ where(color: color_name) }\\nend\\n```\\n\\nnow in our Fruit controller we can use\\n\\n```ruby\\ndef Index\\n  @red_fruits = Fruit.color(\\"red\\")\\n  @yellow_fruits = Fruit.color(\\"yellow\\")\\nend\\n```\\n\\n## 2. Scopes Are Chainable\\n\\nThis is really interesting and it makes scope even more useful.\\n\\n```ruby\\nclass User < ApplicationRecord\\n  scope :active, -> { where(status: \\"active\\") }\\n  scope :recent, -> { where(\'created_at < ?\', 1.week.ago }\\nend\\n```\\n\\nwe can use it in the controller as following;\\n\\n```ruby\\ndef index\\n  @users = User.active.recent\\nend\\n```\\n\\n## 3. How exactly scope works in rails\\n\\nlook at the active scope once again\\n\\n```ruby\\nclass user < ActiveRecord::Base\\n  scope :active, -> { where(status: \\"active\\") }\\nend\\n```\\n\\nwe can achieve the same result using the following class method as given. Basically, instead of writing class method scope is syntactical sugar for writing queries.\\n\\n```ruby\\n\\ndef self.active\\n  User.where(status: \\"active\\")\\nend\\n```\\n\\nI would love to hear some of the interesting topics related to rails which I can explore and write a blog about it on [Twitter](https://x.com/Shyampa09340219).\\n\\nCheers!"},{"id":"relational-database","metadata":{"permalink":"/blog/relational-database","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-16-relational-database.md","source":"@site/blog/2022-05-16-relational-database.md","title":"Relational database.","description":"In the internet era, every organization is storing large data and it is difficult to maintain this much data. There are different databases available but it is very difficult to select the best suitable for our requirement. Mainly databases are classified into Relational database and Non-relational database.","date":"2022-05-16T00:00:00.000Z","tags":[{"inline":false,"label":"MySQL","permalink":"/blog/tags/mysql","description":"MySQL is an open-source relational database management system based on SQL \u2013 Structured Query Language."}],"readingTime":1.62,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"relational-database","title":"Relational database.","authors":"pradnyesh","tags":["mysql"]},"unlisted":false,"prevItem":{"title":"Scope in rails.","permalink":"/blog/scope-in-rails"},"nextItem":{"title":"Eager loading and N+1 query in rails.","permalink":"/blog/eager-loading-and-N-plus-1-query"}},"content":"In the internet era, every organization is storing large data and it is difficult to maintain this much data. There are different databases available but it is very difficult to select the best suitable for our requirement. Mainly databases are classified into Relational database and Non-relational database.\\n\\n\x3c!--truncate--\x3e\\n\\n**Relational database:** It is also called SQL(Structured Query Language) database and it is a set of data organized by tables, records and columns.\\n\\nEx: MySQL, MariaDB, and Postgres etc.\\n\\n**Non-relational database:** It is also called NoSQL(Non Structured Query Language) database. In NoSQL databases data is stored in documents and collections. What NoSQL databases gain in speed, flexibility, availability and partition tolerance, they lack in data consistency and most NoSQL stores can not handle [ACID transactions](<https://en.wikipedia.org/wiki/ACID_(computer_science)>).\\n\\nEx: MongoDB, Cassandra, and HBase.\\n\\nThough there are many database options available today, Relational database is still best choice. New SQL and NoSQL have their place, but a relational database is still the solid choice.\\n\\n### Why Relational database is still best choice?\\n\\n**Ease of Use:** The use of tables to store data in columns and rows makes it easy to access and manage data.\\n\\n**Data Security:** With an RDBMS you can hide sensitive tables and give them their authorization codes, providing a layer of protection for your data\\n\\n**SQL Standard:** SQL is a standardized language well understood by many applications, and many of the alternative database options provide SQL interfaces.\\n\\n**Data Integrity:** the structure of the relational database preserves the integrity of the data and makes it easier to meet compliance regulations.\\n\\n**Performance:** An RDBMS uses indexes to sort data and speed up performance, and supports both desktop and web applications.\\n\\n**Development and Support:** The large players \u2014 Oracle, Microsoft, SAP \u2014 have a vested interest in continuing to develop and evolve their database offering to meet modern standards.\\n\\n**RDBMS Standards:** Relational databases adhere to ACID properties to ensure the reliability of transactions."},{"id":"eager-loading-and-N-plus-1-query","metadata":{"permalink":"/blog/eager-loading-and-N-plus-1-query","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-10-eager-loading-and-n-plus-1-query.md","source":"@site/blog/2022-05-10-eager-loading-and-n-plus-1-query.md","title":"Eager loading and N+1 query in rails.","description":"Sometimes, the implementation of an algorithm can make performance worst. Then it does not matter whether it has used the faster programming language like C or slower like Ruby. So we should implement the algorithms properly. Same while dealing with the database we should use proper queries so that the performance should not affect.","date":"2022-05-10T00:00:00.000Z","tags":[{"inline":false,"label":"Rails","permalink":"/blog/tags/rails","description":"Ruby on Rails is a server-side web application framework written in Ruby under the MIT License. Rails is a model\u2013view\u2013controller framework, providing default structures for a database, a web service, and web pages."},{"inline":false,"label":"Ruby","permalink":"/blog/tags/ruby","description":"A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write."}],"readingTime":2.91,"hasTruncateMarker":true,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"eager-loading-and-N-plus-1-query","title":"Eager loading and N+1 query in rails.","authors":"pradnyesh","tags":["rails","ruby"]},"unlisted":false,"prevItem":{"title":"Relational database.","permalink":"/blog/relational-database"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"Sometimes, the implementation of an algorithm can make performance worst. Then it does not matter whether it has used the faster programming language like C or slower like Ruby. So we should implement the algorithms properly. Same while dealing with the database we should use proper queries so that the performance should not affect.\\n\\n\x3c!--truncate--\x3e\\n\\n### Let\'s observe an example.\\n\\n```ruby\\nclass College < ApplicationRecord\\n  has_many :students\\nend\\n```\\n\\n```ruby\\nclass Student < ApplicationRecord\\n  belongs_to :college\\nend\\n```\\n\\nNow create some colleges and respective students.\\n\\n## N+1 query in Rails\\n\\nIf we wanted to list the first ten students and their colleges, We could write the following code.\\n\\n```sql\\nstudents = Student.limit(10)\\n\\nstudents.each do |student|\\n  puts \\"#{student.college.name} build number #{student.name}\\"\\nend\\n```\\n\\nThe above code works, but it makes far too many independent database queries:\\n\\n```sql\\nStudent Load (0.3ms) SELECT \\"students\\".* FROM \\"students\\" LIMIT ? [[\\"LIMIT\\", 10]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 1], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 2], [\\"LIMIT\\", 1]]\\nCollege Load (0.1ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 2], [\\"LIMIT\\", 1]]\\nCollege Load (0.2ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 2], [\\"LIMIT\\", 1]]\\nCollege Load (0.1ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" = ? LIMIT ? [[\\"id\\", 2], [\\"LIMIT\\", 1]]\\n```\\n\\nCurrently, There are 11 independent queries to fetch 10 students. One query to fetch students and other N queries to fetch college in each iteration. hence the total number of queries is N+1. Now are fetching just 10 records but in the real-time scenario, the number of required records can be large. Suppose we want to fetch 10000 records then we\'ll need to connect database 10001 times and it will degrade the performance of the application heavily.\\n\\n## Eager loading in Rails\\n\\nTo avoid the performance degradation of the previous example we need to reduce the number of independent queries to the database. In rails, this is done by eager loading associated relations. In the eager loading, we collect the required data with only one query.\\n\\n```sql\\nstudents = Student.includes(:college).limit(10)\\n\\nstudents.each do |student|\\n  puts \\"#{student.college.name} build number #{student.name}\\"\\nend\\n```\\n\\nThis time we\'ll use one query to fetch the students and another for fetching the associated colleges.\\n\\n```sql\\nStudent Load (0.4ms) SELECT \\"students\\".* FROM \\"students\\"\\nCollege Load (0.4ms) SELECT \\"colleges\\".* FROM \\"colleges\\" WHERE \\"colleges\\".\\"id\\" IN (?, ?, ?, ?) [[\\"id\\", 1], [\\"id\\", 2], [\\"id\\", 3], [\\"id\\", 4]]\\n```\\n\\nNow, we\'ll required only two queries. Even though we wanted 10000 records only two queries are required to fetch the records from the database and it will improve the performance of our application.\\n\\nFor comparison, the time necessary to load and display 10 builds in my system is 2.1 milliseconds without eager loading and only 0.8 milliseconds with eager loading. This is s huge difference. Currently, In the case of a large number of record fetching, this time difference can be even far more.\\n\\nI would love to hear some of your tips on dealing with N+1 queries on [twitter](https://x.com/Shyampa09340219).\\n\\nCheers!"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-01-04-first-post.md","source":"@site/blog/2022-01-04-first-post.md","title":"First Blog Post","description":"This is my first post here at my personal portfolio, how exciting!!","date":"2022-01-04T00:00:00.000Z","tags":[],"readingTime":0.06,"hasTruncateMarker":false,"authors":[{"name":"Pradnyesh Patil","title":"Full stack developer.","url":"https://github.com/pradnyeshpatil","github":"pradnyeshpatil","linkedin":"https://www.linkedin.com/in/pradnyesh-patil-123456789","imageURL":"https://avatars.githubusercontent.com/u/46282630?s=400&u=2ba684f13f0864d5aaccbd09719f0ed7c2283068&v=4","key":"pradnyesh","page":null}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":"pradnyesh","tags":[]},"unlisted":false,"prevItem":{"title":"Eager loading and N+1 query in rails.","permalink":"/blog/eager-loading-and-N-plus-1-query"}},"content":"This is my first post here at my personal portfolio, how exciting!!"}]}}')}}]);